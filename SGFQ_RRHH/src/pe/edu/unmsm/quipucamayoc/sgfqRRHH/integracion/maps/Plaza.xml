<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="Plaza" >

<typeAlias alias="PlazaDTO" type="pe.edu.unmsm.quipucamayoc.sgfqRRHH.negocio.dto.PlazaDTO"/>
<typeAlias alias="VWCargo" type="pe.edu.unmsm.quipucamayoc.sgfqRRHH.negocio.dto.VWCargoDTO"/>
<typeAlias alias="servidorAntiguoDTO" type="pe.edu.unmsm.quipucamayoc.sgfqRRHH.negocio.dto.ServidorAntiguoDTO"/>
<typeAlias alias="capUnidad" type="pe.edu.unmsm.quipucamayoc.sgfqRRHH.negocio.dto.CapUnidad"/>

<resultMap class="PlazaDTO" id="rsPlazaPlani">
	<result property="idPlaza" columnIndex="1"/>
	<result property="idDep" columnIndex="2"/>
	<result property="estadoPlaza" columnIndex="3"/>
	<result property="descCargo" columnIndex="4"/>
</resultMap>

<resultMap class="VWCargo" id="rsVWCargo">
	<result property="idCargoEstr"			columnIndex="1"/>
	<result property="descCargo" 			columnIndex="2"/>
	<result property="numPlaza" 			columnIndex="3"/>
	<result property="serApePat" 			columnIndex="4"/>
	<result property="serApeMat" 			columnIndex="5"/>
	<result property="serNom" 				columnIndex="6"/>
	<result property="serDescDep" 			columnIndex="7"/>
	<result property="serExiste" 			columnIndex="8"/>
	<result property="clasificacion"		columnIndex="10"/>
	<result property="descCargoClasif" 		columnIndex="11"/>
	<result property="codCargoClasif"		columnIndex="12"/>
	<result property="tipTrabCargoClasif" 	columnIndex="13"/>
	<result property="categoria" 			columnIndex="14"/>
	<result property="serDescDepNVL3"		columnIndex="15"/>
	<result property="estado_plaza"			columnIndex="16"/>
	<result property="grupOcupacional"		columnIndex="17"/>
</resultMap>

<resultMap class="servidorAntiguoDTO" id="rsServAntiguo">
	<result property="serCod" columnIndex="1"/>
	<result property="numSerest" columnIndex="2"/>
	<result property="serApePat" columnIndex="3"/>
	<result property="serApeMat" columnIndex="4"/>
	<result property="serNom" columnIndex="5"/>
	<result property="serTipo" columnIndex="6"/>
	<result property="serEstado" columnIndex="7"/>
	<result property="serCondicion" columnIndex="8"/>
	<result property="serCodDepRac" columnIndex="9"/>
	<result property="serDescDepRac" columnIndex="10"/>
	<result property="serFech_in_unmsm" columnIndex="12"/>
	<result property="serCategoria" columnIndex="13"/>
</resultMap>

<resultMap class="capUnidad" id="consolidado">
	<result property="udDesc" 			columnIndex="1"/>
	<result property="ocupadoFuncional" columnIndex="2"/>
	<result property="libreFuncional" 	columnIndex="3"/>
	<result property="totalFunc"		columnIndex="4"/>
	<result property="ocupado"			columnIndex="5"/>
	<result property="libre" 			columnIndex="6"/>
	<result property="totalPres"		columnIndex="7"/>
	<result property="aprobado"			columnIndex="8"/>
	<result property="solicitado"		columnIndex="9"/>
	<result property="totalPrev"		columnIndex="10"/>
	<result property="total"			columnIndex="11"/>
</resultMap>

<select id="listarPlazasxEstadoxDep" resultMap="rsPlazaPlani">
	select pla.C_COD_PLAZA, cargo.N_UD_ID, pla.N_EST_PLAZA, cla.T_CARCLA_NOM||'-'||estr.T_NOM_CARGO_ESTR nomplaza 
	from qprodataplani.TB_NUM_PLAZAS pla, qprodataplani.TB_cargo cargo, 
	qprodataplani.TB_CARGO_CLASIF_ESTRUCT claest, qprodataplani.TB_CARGO_CLASIFICADOR cla, qprodataplani.TB_CARGO_ESTRUCTURAL estr  
	where
	pla.N_COD_CARGO=cargo.C_COD_CARGO and pla.N_EST_PLAZA=3 
	and cargo.C_CARCLA_COD=claest.C_COD_CARGO_CLASIF_ESTR
	and claest.N_COD_CARGO_CLASIF=cla.C_CARCLA_COD and claest.N_COD_CARGO_ESTR=estr.C_COD_CARGO_ESTR
	and cargo.N_UD_ID=#udId#
</select>

<update id="updatePlaza" parameterClass="java.lang.Integer">
	UPDATE qprodataplani.TB_CIERRE_CAP
	SET C_CC_EST_PLAZA=4
	WHERE
	C_CC_COD_PLAZA=#idPlaza#
</update>

<update id="updatePlazaFuncional" parameterClass="java.lang.Integer">
	UPDATE qprodataplani.TB_CIERRE_CAP
	SET C_CC_EST_PLAZA=6
	WHERE
	C_CC_COD_PLAZA=#idPlaza#
</update>

<update id="updatePlazaaVacante" parameterClass="java.lang.Integer" >
	UPDATE qprodataplani.TB_CIERRE_CAP
	SET C_CC_EST_PLAZA=3
	WHERE
	C_CC_COD_PLAZA=#idPlaza#
</update>

<update id="updatePlazaaVacanteFunc" parameterClass="java.lang.Integer" >
	UPDATE qprodataplani.TB_CIERRE_CAP
	SET C_CC_EST_PLAZA=5
	WHERE
	C_CC_COD_PLAZA=#idPlaza#
</update>

<delete id="eliminarPlaza" parameterClass="java.util.Map" >
	DELETE qpdatagestion.TB_PLAZA_SERVIDOR
	WHERE
		N_ID_PLAZA= #idplazaser#
	
</delete>


<select id="listarPlazaServxDep0"  resultMap="rsVWCargo">
   SELECT ESTR.C_COD_CARGO_ESTR,ESTR.T_NOM_CARGO_ESTR, PLAZA.C_COD_PLAZA ,S.SER_APE_PAT,S.SER_APE_MAT,S.SER_NOM, 
    (SELECT UD2.UD_DSC FROM QPRODATAQUIPU.UNI_DEP UD2 WHERE UD2.UD_ID=UD.UNIDEPCALDEP)||' - '||UD.UD_DSC, 
    DECODE(S.SER_APE_PAT||S.SER_APE_MAT||S.SER_NOM,NULL, 'VACANTE',    S.SER_APE_PAT||' '||S.SER_APE_MAT||', '||S.SER_NOM),UD.UD_COD,CLASIF.T_CARCLA_COD,CLASIF.T_CARCLA_NOM
    ,CLASIF.C_CARCLA_COD, CLASIF.T_CARCLA_TIPO_TRAB ,SE.SER_CAT_ACT
    ,'','','',''
    FROM QPRODATAPLANI.TB_NUM_PLAZAS PLAZA, QPRODATAPLANI.TB_CARGO CARGO, 
    QPRODATAPLANI.TB_CARGO_CLASIF_ESTRUCT CARCLAEST, QPRODATAPLANI.TB_CARGO_CLASIFICADOR CLASIF,
    QPRODATAPLANI.TB_CARGO_ESTRUCTURAL ESTR, QPDATAGESTION.TB_PLAZA_SERVIDOR PLAZASERV, DATAPERSUEL.SERVIDOR_ESTADO SE,
    DATAPERSUEL.SERVIDOR S, QPRODATAQUIPU.UNI_DEP UD
    WHERE
    PLAZA.N_COD_CARGO=CARGO.C_COD_CARGO AND
    CARGO.C_CARCLA_COD=CARCLAEST.C_COD_CARGO_CLASIF_ESTR AND
    CARCLAEST.N_COD_CARGO_CLASIF=CLASIF.C_CARCLA_COD AND (PLAZA.N_EST_PLAZA=4 OR PLAZA.N_EST_PLAZA=3) AND
    CARGO.N_ANIO=#anio# AND 
    CARCLAEST.N_COD_CARGO_ESTR=ESTR.C_COD_CARGO_ESTR AND
    PLAZA.C_COD_PLAZA=PLAZASERV.N_ID_PLAZA(+) AND
    PLAZASERV.T_SER_COD=SE.SER_COD(+) AND
    PLAZASERV.N_NUM_SEREST=SE.NUM_SEREST(+) AND
    SE.SER_COD=S.SER_COD(+) AND
    CARGO.N_UD_ID=UD.UD_ID AND
    CARGO.N_UD_ID IN (SELECT UD_ID FROM QPRODATAQUIPU.UNI_DEP START WITH UD_ID=#udId# CONNECT BY PRIOR UD_ID=UD_PAD)
    ORDER BY UD.UD_COD,CLASIF.T_CARCLA_COD,ESTR.T_NOM_CARGO_ESTR,C_COD_PLAZA
</select>

<select id="listarPlazaServxDep"  resultMap="rsVWCargo" parameterClass="java.util.Map">
  SELECT  ESTR.C_COD_CARGO_ESTR,ESTR.T_NOM_CARGO_ESTR, CIERRE.C_CC_COD_PLAZA,
        S.SER_APE_PAT,S.SER_APE_MAT,S.SER_NOM, 
    (SELECT UD2.UD_DSC FROM QPRODATAQUIPU.UNI_DEP UD2 WHERE UD2.UD_ID=UD.UNIDEPCALDEP)||' - '||UD.UD_DSC, 
    DECODE(S.SER_APE_PAT||S.SER_APE_MAT||S.SER_NOM,NULL, 'VACANTE',    S.SER_APE_PAT||' '||S.SER_APE_MAT||', '||S.SER_NOM),UD.UD_COD,
    CLASIF.T_CARCLA_COD,CLASIF.T_CARCLA_NOM,CLASIF.C_CARCLA_COD, CLASIF.T_CARCLA_TIPO_TRAB ,SE.SER_CAT_ACT
    ,ud.UD_DSC,decode(cierre.C_CC_EST_PLAZA,3,'Presupuestado',4,'Presupuestado',5,'Funcional',6,'Funcional','') EST_PLAZA,ts.DES_TIP_SER
    FROM 
        QPRODATAPLANI.TB_CIERRE_CAP CIERRE,
        QPRODATAPLANI.TB_CARGO_CLASIF_ESTRUCT CARCLAEST, 
        QPRODATAPLANI.TB_CARGO_CLASIFICADOR CLASIF,
        QPRODATAPLANI.TB_CARGO_ESTRUCTURAL ESTR, 
        QPDATAGESTION.TB_PLAZA_SERVIDOR PLAZASERV, 
        DATAPERSUEL.SERVIDOR_ESTADO SE,
        DATAPERSUEL.TIP_SERVIDOR ts,
        DATAPERSUEL.SERVIDOR S, 
        QPRODATAQUIPU.UNI_DEP UD
    <dynamic prepend="where">
    CIERRE.C_COD_CARGO_CLASIF_ESTR = CARCLAEST.C_COD_CARGO_CLASIF_ESTR
    AND CARCLAEST.N_COD_CARGO_CLASIF=CLASIF.C_CARCLA_COD 
    AND (CIERRE.C_CC_EST_PLAZA=4 OR CIERRE.C_CC_EST_PLAZA=3 OR CIERRE.C_CC_EST_PLAZA=5 OR CIERRE.C_CC_EST_PLAZA=6) 
    AND CIERRE.N_CC_ANIO = #anio#
    AND CARCLAEST.N_COD_CARGO_ESTR=ESTR.C_COD_CARGO_ESTR 
    AND CIERRE.C_CC_COD_PLAZA = PLAZASERV.N_ID_PLAZA(+)
    AND PLAZASERV.T_SER_COD=SE.SER_COD(+) 
    AND PLAZASERV.N_NUM_SEREST=SE.NUM_SEREST(+) 
    AND SE.SER_COD=S.SER_COD(+) 
    and se.SER_TIP_ACT = ts.COD_TIP_SER (+)
    AND CIERRE.UD_ID = UD.UD_ID
    <isNotEqual prepend=" " property="filtroClasificacion" compareValue="">and CLASIF.T_CARCLA_COD like #filtroClasificacion# || '%'</isNotEqual>
    <isNotEqual prepend=" " property="filtroGrupOcupacional" compareValue="">and ts.DES_TIP_SER like #filtroGrupOcupacional# || '%'</isNotEqual>
    <isNotEqual prepend=" " property="udCod" compareValue="00">AND UD.UD_COD like #udCod# || '%'</isNotEqual>    
    </dynamic>
    ORDER BY UD.UD_COD,CLASIF.T_CARCLA_COD,ESTR.T_NOM_CARGO_ESTR,C_CC_COD_PLAZA
</select>

<select id="listarPlazaVacxDep0" resultMap="rsVWCargo">
    select * from
    (select ESTR.C_COD_CARGO_ESTR,estr.T_NOM_CARGO_ESTR, plaza.C_COD_PLAZA ,s.SER_APE_PAT,s.SER_APE_MAT,s.SER_NOM, 
    (select ud2.UD_DSC from qprodataquipu.uni_dep ud2 where ud2.UD_ID=ud.UNIDEPCALDEP)||' - '||ud.UD_DSC,
    decode(s.SER_APE_PAT||s.SER_APE_MAT||s.SER_NOM,null, 'VACANTE',
    s.SER_APE_PAT||' '||s.SER_APE_MAT||', '||s.SER_NOM) estado,UD.UD_COD,CLASIF.T_CARCLA_COD,CLASIF.T_CARCLA_NOM
    ,CLASIF.C_CARCLA_COD, CLASIF.T_CARCLA_TIPO_TRAB ,se.SER_CAT_ACT,'','','',''
    from qprodataplani.TB_NUM_PLAZAS plaza, qprodataplani.TB_cargo cargo, 
    qprodataplani.TB_CARGO_CLASIF_ESTRUCT carclaest, qprodataplani.TB_CARGO_CLASIFICADOR clasif,
    qprodataplani.TB_CARGO_ESTRUCTURAL estr, qpdatagestion.TB_PLAZA_SERVIDOR plazaserv, datapersuel.servidor_estado se,
    datapersuel.servidor s, qprodataquipu.uni_dep ud
    where
    plaza.N_COD_CARGO=cargo.C_COD_CARGO and
    cargo.C_CARCLA_COD=carclaest.C_COD_CARGO_CLASIF_ESTR and
    carclaest.N_COD_CARGO_CLASIF=clasif.C_CARCLA_COD and
    carclaest.N_COD_CARGO_ESTR=estr.C_COD_CARGO_ESTR and
    plaza.C_COD_PLAZA=plazaserv.N_ID_PLAZA(+) and
    plazaserv.T_SER_COD=se.SER_COD(+) and
    plazaserv.N_NUM_SEREST=se.num_serest(+) and
    se.SER_COD=s.SER_COD(+) and
    cargo.N_UD_ID=ud.UD_ID and
    cargo.N_UD_ID IN (SELECT UD_ID FROM qprodataquipu.UNI_DEP START WITH UD_ID=#udId#
                CONNECT BY PRIOR UD_ID=UD_PAD))
    where estado='VACANTE' 
    order by UD_COD,T_CARCLA_COD,T_NOM_CARGO_ESTR,C_COD_PLAZA
</select>

<select id="listarPlazaVacxDep" resultMap="rsVWCargo">
	select * from
    (select 
    ESTR.C_COD_CARGO_ESTR,estr.T_NOM_CARGO_ESTR, cierre.C_CC_COD_PLAZA,
    s.SER_APE_PAT,s.SER_APE_MAT,s.SER_NOM, 
    (select ud2.UD_DSC from qprodataquipu.uni_dep ud2 where ud2.UD_ID=ud.UNIDEPCALDEP)||' - '||ud.UD_DSC, decode(s.SER_APE_PAT||s.SER_APE_MAT||s.SER_NOM,null, 'VACANTE',
    s.SER_APE_PAT||' '||s.SER_APE_MAT||', '||s.SER_NOM) 
    estado,UD.UD_COD,CLASIF.T_CARCLA_COD,CLASIF.T_CARCLA_NOM
    ,CLASIF.C_CARCLA_COD, CLASIF.T_CARCLA_TIPO_TRAB ,se.SER_CAT_ACT
    ,ud.UD_DSC,decode(cierre.C_CC_EST_PLAZA,3,'Presupuestado',4,'Presupuestado',5,'Funcional',6,'Funcional','') EST_PLAZA,ts.DES_TIP_SER
    from 
    qprodataplani.TB_CIERRE_CAP cierre,
    qprodataplani.TB_CARGO_CLASIF_ESTRUCT carclaest,
    qprodataplani.TB_CARGO_CLASIFICADOR clasif,
    qprodataplani.TB_CARGO_ESTRUCTURAL estr, 
    qpdatagestion.TB_PLAZA_SERVIDOR plazaserv, 
    datapersuel.servidor_estado se,
    DATAPERSUEL.TIP_SERVIDOR ts,
    datapersuel.servidor s, 
    qprodataquipu.uni_dep ud
    <dynamic prepend="where">
    cierre.C_COD_CARGO_CLASIF_ESTR = carclaest.C_COD_CARGO_CLASIF_ESTR and
    carclaest.N_COD_CARGO_CLASIF=clasif.C_CARCLA_COD and
    carclaest.N_COD_CARGO_ESTR=estr.C_COD_CARGO_ESTR and
    cierre.C_CC_COD_PLAZA = plazaserv.N_ID_PLAZA(+) and
    (CIERRE.C_CC_EST_PLAZA=4 OR CIERRE.C_CC_EST_PLAZA=3 OR CIERRE.C_CC_EST_PLAZA=5 OR CIERRE.C_CC_EST_PLAZA=6) AND 
    plazaserv.T_SER_COD=se.SER_COD(+) and
    plazaserv.N_NUM_SEREST=se.num_serest(+) and
    se.SER_COD=s.SER_COD(+) and
    se.SER_TIP_ACT = ts.COD_TIP_SER (+) AND
    cierre.UD_ID = ud.UD_ID  AND
    <isNotEqual prepend=" " property="filtroClasificacion" compareValue="">CLASIF.T_CARCLA_COD like #filtroClasificacion# || '%' and</isNotEqual>
    <isNotEqual prepend=" " property="filtroGrupOcupacional" compareValue="">ts.DES_TIP_SER like #filtroGrupOcupacional# || '%' and</isNotEqual>
    <isNotEqual prepend=" " property="udCod" compareValue="00">ud.UD_COD LIKE #udCod# || '%' and</isNotEqual>    
    cierre.N_CC_ANIO = #anio#
    </dynamic>
    )
    <dynamic prepend="where">
    <isEqual prepend="," property="tipo" compareValue="3">estado!='VACANTE'</isEqual>
    <isEqual prepend="," property="tipo" compareValue="2">estado='VACANTE'</isEqual>
    </dynamic>
    order by UD_COD,T_CARCLA_COD,T_NOM_CARGO_ESTR,C_CC_COD_PLAZA
</select>

<select id="listarServidoresAntiguos" resultMap="rsServAntiguo">
    select se.ser_cod, se.NUM_SEREST, s.SER_APE_PAT, s.SER_APE_MAT, s.SER_NOM, ts.DES_TIP_SER, 
    es.DESC_EST, cond.DES_CON_PLA,ud.ud_id, ud.UD_DSC,'' maxmes,'' ser_cat,'' SER_FECH_IN_UNMSM
    from datapersuel.servidor s,datapersuel.servidor_estado se, datapersuel.tip_servidor ts, 
    datapersuel.estado es, qprodataquipu.uni_dep ud, datapersuel.COND_SER_PLAN cond
    where s.SER_COD=se.ser_cod and se.SER_TIP_ACT=ts.COD_TIP_SER and 
    se.SER_EST_ACT=es.COD_EST and se.SER_COD_DEP_RAC=ud.ud_id and
    se.SER_CON_PLA_ACT=cond.COD_CON_PLA and cond.COD_CON_PLA in(1, 2, 8)
    AND ud.UD_ID IN (SELECT UD_ID FROM UNI_DEP START WITH UD_ID=#udId#
            CONNECT BY PRIOR UD_ID=UD_PAD)
    order by s.SER_APE_PAT, s.SER_APE_MAT, s.SER_NOM
</select>

<select id="obtenerServidorAntiguo" resultMap="rsServAntiguo">
    select se.ser_cod, se.NUM_SEREST, s.SER_APE_PAT, s.SER_APE_MAT, s.SER_NOM, ts.DES_TIP_SER, 
    es.DESC_EST, cond.DES_CON_PLA,ud.ud_id, ud.UD_DSC,'' maxmes,'' ser_cat,'' SER_FECH_IN_UNMSM
    from datapersuel.servidor s,datapersuel.servidor_estado se, datapersuel.tip_servidor ts, 
    datapersuel.estado es, qprodataquipu.uni_dep ud, datapersuel.COND_SER_PLAN cond
    where s.SER_COD=se.ser_cod and se.SER_TIP_ACT=ts.COD_TIP_SER and 
    se.SER_EST_ACT=es.COD_EST and se.SER_COD_DEP_RAC=ud.ud_id and
    se.SER_CON_PLA_ACT=cond.COD_CON_PLA and cond.COD_CON_PLA in(1, 2, 8)
    AND ud.UD_ID IN (SELECT UD_ID FROM UNI_DEP START WITH UD_ID=#serCodDepRac#
    and se.ser_cod=#serCod# and se.num_serest=#numSerest#
            CONNECT BY PRIOR UD_ID=UD_PAD)
</select>

<select id="listarServidoresTotales" resultMap="rsServAntiguo" parameterClass="java.util.Map">
	select distinct tb2.* ,tb1.SER_CAT
	from 
	(select distinct t1.SER_COD,t2.PLA_MES,t1.SER_CAT
	from datapersuel.servidor_planilla t1, datapersuel.planilla t2
	where t1.COD_PLA = t2.COD_PLA 
	and t2.cod_tip_pla in (1,3) 
	and t2.pla_anu = #anio#
	) tb1,
	(
	select distinct serpla.SER_COD,serpla.NUM_SEREST , ser.SER_APE_PAT,ser.SER_APE_MAT,ser.SER_NOM ,ts.DES_TIP_SER,es.DESC_EST, cond.DES_CON_PLA,ud.UD_ID ,ud.UD_DSC,max(pla.PLA_MES) maxmes,ser.SER_FECH_IN_UNMSM
	from datapersuel.servidor_planilla serpla,datapersuel.DEPENDENCIA_CESANTES dep_ces, qprodataquipu.uni_dep ud, datapersuel.tip_servidor ts,
	datapersuel.servidor_1 ser,datapersuel.servidor_estado se,datapersuel.planilla pla ,  datapersuel.estado es,datapersuel.COND_SER_PLAN cond
	<dynamic prepend="where">
	serpla.COD_PLA = pla.COD_PLA
	and dep_ces.COD_DEP_CESANTES = serpla.SER_COD_DEP_CES
	and dep_ces.UD_ID = ud.UD_ID
	and ser.SER_COD = serpla.SER_COD
	and pla.cod_tip_pla in (1,3) 
	and pla.pla_anu = #anio#
	and pla.PLA_MES >=1
	
	and ser.SER_COD=se.ser_cod 
	and se.SER_TIP_ACT=ts.COD_TIP_SER 
	and se.SER_EST_ACT=es.COD_EST
	and se.SER_EST_ACT != 7
	and (se.SER_COD_DEP_RAC=ud.ud_id 
        OR  se.SER_COD_DEP_CES=dep_ces.COD_DEP_CESANTES)
	and se.SER_CON_PLA_ACT=cond.COD_CON_PLA
	and cond.COD_CON_PLA in(1, 2, 8)
	<isNotEqual prepend="," property="udCod" compareValue="00">AND ud.UD_COD like  #udCod# || '%'</isNotEqual>
	</dynamic>
	group by serpla.SER_COD,serpla.NUM_SEREST, ser.SER_APE_PAT,ser.SER_APE_MAT, ser.SER_NOM,ts.DES_TIP_SER,es.DESC_EST, cond.DES_CON_PLA,ud.UD_ID ,ud.UD_DSC,ser.SER_FECH_IN_UNMSM
	) tb2
	where 
	    tb1.PLA_MES = tb2.maxmes
	and tb1.SER_COD = tb2.SER_COD
	order by 3,4 ,5

</select>

<select id="listarServidoresxAnio" resultMap="rsServAntiguo" parameterClass="java.util.Map">
	select distinct tb2.* ,tb1.SER_CAT
	from 
	(select distinct t1.SER_COD,t2.PLA_MES,t1.SER_CAT
	from datapersuel.servidor_planilla_1 t1, datapersuel.planilla t2,datapersuel.categoria t3,QPDATAGESTION.TB_CARGO_ESTR_X_CATEG_REMUNE cexcr
	where t1.COD_PLA = t2.COD_PLA 
	and t2.cod_tip_pla in (1,3) 
	and t2.pla_anu = #anio#
	and cexcr.C_COD_CARGO_ESTR =  #idCargoEstruc#
    and cexcr.T_CARCLA_TIPO_TRAB = #tipTrabCargoClasif#
    and t3.COD_TIP_SER = cexcr.COD_TIP_SER  
    and to_char(t3.COD_SUB_TIP) like nvl(to_char(cexcr.COD_SUB_TIP),'%')
    and to_char(t3.COD_NIV_SUB) like nvl(to_char(cexcr.COD_NIV_SUB),'%')
    and t1.SER_CAT = t3.COD_CATEG   
	) tb1,
	(
	select distinct serpla.SER_COD,serpla.NUM_SEREST , ser.SER_APE_PAT,ser.SER_APE_MAT,ser.SER_NOM ,ts.DES_TIP_SER,es.DESC_EST, cond.DES_CON_PLA,ud.UD_ID ,ud.UD_DSC,max(pla.PLA_MES) maxmes,ser.SER_FECH_IN_UNMSM
	from datapersuel.servidor_planilla_1 serpla,datapersuel.DEPENDENCIA_CESANTES dep_ces, qprodataquipu.uni_dep ud, datapersuel.tip_servidor ts,
	datapersuel.servidor_1 ser,datapersuel.servidor_estado_1 se,datapersuel.planilla pla ,  datapersuel.estado es,datapersuel.COND_SER_PLAN cond
	<dynamic prepend="where">
	serpla.COD_PLA = pla.COD_PLA
	and dep_ces.COD_DEP_CESANTES = serpla.SER_COD_DEP_CES
	and dep_ces.UD_ID = ud.UD_ID
	and ser.SER_COD = serpla.SER_COD
	and pla.cod_tip_pla in (1,3) 
	and pla.pla_anu = #anio#
	and pla.PLA_MES >=1
	
	and ser.SER_COD=se.ser_cod 
	and se.SER_TIP_ACT=ts.COD_TIP_SER 
	and se.SER_EST_ACT=es.COD_EST
	and se.SER_EST_ACT != 7
	and (se.SER_COD_DEP_RAC=ud.ud_id 
        OR  se.SER_COD_DEP_CES=dep_ces.COD_DEP_CESANTES)
	and se.SER_CON_PLA_ACT=cond.COD_CON_PLA
	and cond.COD_CON_PLA in(1, 2, 8)
	<isNotEqual prepend="," property="udCod" compareValue="00">AND ud.UD_COD like  #udCod# || '%'</isNotEqual>
	</dynamic>
	group by serpla.SER_COD,serpla.NUM_SEREST, ser.SER_APE_PAT,ser.SER_APE_MAT, ser.SER_NOM,ts.DES_TIP_SER,es.DESC_EST, cond.DES_CON_PLA,ud.UD_ID ,ud.UD_DSC,ser.SER_FECH_IN_UNMSM
	) tb2
	where 
	    tb1.PLA_MES = tb2.maxmes
	and tb1.SER_COD = tb2.SER_COD
	order by 3,4 ,5
</select>

<select id="consolidadoCap" parameterClass="java.util.Map" resultMap="consolidado">
	select tb2.UD_DSC , tb1.* from(
	select 
	nvl(sum(decode(cierre.C_CC_EST_PLAZA,6,1,0)),0) OCUPADO_FUNC, 
	nvl(sum(decode(cierre.C_CC_EST_PLAZA,5,1,0)),0) VACANTE_FUNC, 
	nvl(SUM(decode(cierre.C_CC_EST_PLAZA,5,1,6,1,0)),0) TOTAL_FUNC, 
	nvl(sum(decode(cierre.C_CC_EST_PLAZA,4,1,0)),0) OCUPADO_PRES, 
	nvl(sum(decode(cierre.C_CC_EST_PLAZA,3,1,0)),0) VACANTE_PRES, 
	nvl(SUM(decode(cierre.C_CC_EST_PLAZA,3,1,4,1,0)),0) TOTAL_PRES,
	nvl(sum(decode(cierre.C_CC_EST_PLAZA,2,1,0)),0) APROVADO, 
	nvl(sum(decode(cierre.C_CC_EST_PLAZA,1,1,0)),0) SOLICITADO, 
	nvl(SUM(decode(cierre.C_CC_EST_PLAZA,1,1,2,1,0)),0) TOTAL_PREV,
	nvl(SUM(decode(cierre.C_CC_EST_PLAZA,1,1,2,1,3,1,4,1,5,1,6,1,0)),0) total
	from qprodataplani.tb_cierre_cap cierre,qprodataquipu.uni_dep ud
	<dynamic prepend="where"> 
	cierre.N_CC_ANIO=#anio#
	and ud.UD_ID = cierre.UD_ID
	<isNotEqual prepend="," property="ud_cod" compareValue="00">AND UD.UD_COD LIKE '$ud_cod$%'</isNotEqual>
	</dynamic>
	) tb1,qprodataquipu.uni_dep tb2
	where tb2.UD_COD ='$ud_cod$' 
</select>	

<select id="obtenerClasificaciones" resultClass="java.lang.String">
	select distinct(T_CARCLA_COD) from qprodataplani.TB_CARGO_CLASIFICADOR order by 1
</select>

<select id="obtenerGruposOcupacionales" resultClass="java.lang.String">
	select DES_TIP_SER from datapersuel.TIP_SERVIDOR
</select>

</sqlMap>

